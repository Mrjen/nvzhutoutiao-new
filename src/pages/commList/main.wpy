<template>
   <div class="like-list">
    <view wx:if="{{commentList.length?true:false}}">
        <view class="comm-item" wx:for="{{commentList}}" wx:key="{{index}}" wx:for-index="idx">
            <view class="item-main">
              <view class="time">{{item.date}}</view>
              <view class="in-item" 
                    wx:for="{{item.list}}" 
                    wx:for-item="list" 
                    wx:for-index="indx"
                    wx:key="list.article_id">
              <view class="item-left" 
                    @tap="toDetail"
                    bindtouchstart="touchS" 
                    bindtouchmove="touchM" 
                    bindtouchend="touchE" 
                    data-inidx="{{indx}}"
                    data-outidx="{{idx}}"
                    data-id="{{list.article_id}}"
                    data-reid="{{list.comment_id}}"
                    style="{{list.txtStyle}}">
                  <block>
                     <view class="title title2" wx:if="{{!item.sliderDown}}">{{list.comment}}</view>
                     <view class="title" wx:else>{{list.comment}}</view>
                  </block>
                  
                  <view class="info">
                  #{{list.title}}
                  </view>
              </view>
              <view class="item-delete" 
                    bindtap="delItem" 
                    data-id="{{list.comment_id}}"
                    data-outidx="{{idx}}"
                    data-inidx="{{indx}}">删除</view>
              </view>
           </view>
        </view>
    </view>
    <view wx:else class="none-more">
       暂无数据
    </view>

  </div>
</template>

<script>
import wepy from 'wepy';
import wxRequest from "../../utils/http.js";
import api from "../../utils/api.js";
import commItem from './components/comment-item';
export default class commentList extends wepy.page {
  config = {
     "navigationBarTitleText":"评论列表"
  }
   data = {
     commentList:[],
     page: 2,
     delBtnWidth: 100
   }
   components = {
    commItem
  }
  async onShow(){
     let commentList = await this.getList(1,'comment');
     if(commentList.data.code === api.STATUS){
       let _comm = commentList.data.data;
       for(let i=0,len=_comm.length;i<len;i++){
          for(let j=0,lenth=_comm[i].list.length;j<lenth;j++){
             _comm[i].list[j].sliderDown = false;
          }
       }
       this.commentList = _comm;
       this.$apply();
     }else{
       console.warn('请求错误',commentList);
     }
     
  }
  methods = {
    // 删除
    async delItem(e){
      let dataset = e.currentTarget.dataset;
      console.log('dataset', dataset)
      let json = await wxRequest(api.delcomment,{comment_id:dataset.id},'POST');
      if(json.data.code === api.STATUS){
         let commentList = this.commentList;
         let comm = commentList[dataset.outidx].list;
         comm.splice(dataset.inidx,1);
         commentList[dataset.outidx].list = comm;
         this.commentList = commentList;
         this.$apply();
      }
    },

    // 去详情页
    toDetail(e){
      let dataset = e.currentTarget.dataset;
      wx.navigateTo({
        url: `/pages/details/main?id=${dataset.id}&reid=${dataset.reid}`
      })
    },

     //手指刚放到屏幕触发
    touchS(e){
    //判断是否只有一个触摸点
      if(e.touches.length==1){
        this.startX = e.touches[0].clientX
      }
    },

     //触摸时触发，手指在屏幕上每移动一次，触发一次
  touchM(e){
      // console.log("touchM:",e);
    var that = this
    if(e.touches.length==1){
     //记录触摸点位置的X坐标
      var moveX = e.touches[0].clientX;
      //计算手指起始点的X坐标与当前触摸点的X坐标的差值
      var disX = this.startX - moveX;
     //delBtnWidth 为右侧按钮区域的宽度
      var delBtnWidth = this.delBtnWidth;
      var txtStyle = "";
      if(disX == 0 || disX < 0){//如果移动距离小于等于0，文本层位置不变
        txtStyle = "left:0px";
      }else if(disX > 0 ){//移动距离大于0，文本层left值等于手指移动距离
        txtStyle = "left:-"+disX+"rpx";
        if(disX>=delBtnWidth){
          //控制手指移动距离最大值为删除按钮的宽度
          txtStyle = "left:-"+delBtnWidth+"rpx";
        }
      }
      //获取手指触摸的是哪一个item
      let dataset = e.currentTarget.dataset;
      var inidx = dataset.inidx;
      var commentList = this.commentList;
      // console.log('commentList', commentList[dataset.outidx].list)

      let comm = commentList[dataset.outidx].list;
       comm.map(el=>{
          el.txtStyle = 'left:0'
        })
       comm[inidx].txtStyle = txtStyle;
       console.log('comm', comm)
       commentList[dataset.outidx].list = comm;
       this.commentList = commentList;
       this.$apply();
    }
  },

  touchE(e){
    // console.log("touchE", e);
    var that = this
    if(e.changedTouches.length==1){
      //手指移动结束后触摸点位置的X坐标
      var endX = e.changedTouches[0].clientX;
      //触摸开始与结束，手指移动的距离
      var disX = this.startX - endX;
      var delBtnWidth = this.delBtnWidth;
      //如果距离小于删除按钮的1/2，不显示删除按钮
      var txtStyle = disX > delBtnWidth/2 ? "left:-"+delBtnWidth+"rpx":"left:0px";
      //获取手指触摸的是哪一项
      
      let dataset = e.currentTarget.dataset;
      var inidx = dataset.inidx;
      var commentList = this.commentList;
      // console.log('commentList', commentList[dataset.outidx].list)

      let comm = commentList[dataset.outidx].list;
       comm.map(el=>{
          el.txtStyle = 'left:0'
        })
       comm[inidx].txtStyle = txtStyle;
       commentList[dataset.outidx].list = comm;
       this.commentList = commentList;
       this.$apply();
    }
  }

  }

  async getList(page,type='comment'){
     let list =  wxRequest(api.userCommentList,{ page: page, type: type },'POST')
     return list;
  }

  async onPullDownRefresh(){
     wx.stopPullDownRefresh()
  }

  async onReachBottom(){
    console.log('到底了')
     let list = await this.getList(this.page, 'comment')
     if(list.data.code === api.STATUS){
        if(list.data.data.length>0){
           let commentList = this.commentList;
           this.commentList = [...commentList,...list.data.data];
           this.page++;
           this.$apply();
        }
     }
  }
}
</script>

<style lang="less" scoped>
.like-list{
   .list-item{
     width: 100%;
     box-sizing: border-box;
   }
   .time{
     height: 50rpx;
     background: #eee;
     font-size: 22rpx;
     line-height: 50rpx;
     color:#9f9f9f;
     padding:0 10rpx;
   }
   .in-item{
     display: flex;
     align-items: center;
     min-height: 120rpx;
     position: relative;
     z-index: 2;
     width: 750rpx;
    //  border:1px solid red;
   }
   .in-item::after{
     content: '';
     display: block;
     width: 100%;
     border-bottom: 1px solid rgba(0, 0, 0, .1);
     position: absolute;
     left: 0;
     bottom: 0;
     transform: scaleY(.5);
     z-index: 5;
   }
   .item-left{
     flex: 1;
     padding-right: 14rpx;
     display: flex;
     flex-direction: column;
     justify-content: space-around;
     position: relative;
     z-index: 2;
     padding: 20rpx;
     width: 100%;
     height: 100%;
     background: #fff;
     .title{
       font-size: 28rpx;
     }
     .title2{
       display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
      overflow: hidden;
     }
     .zhankai{
       position: absolute;
     }
     .info{
       display: flex;
       justify-content: space-between;
       font-size: 24rpx;
       color: #666;
       margin-top: 10rpx;
     }    
   }
   .item-delete{
       width: 100rpx;
       height: 96%;
       display: flex;
       align-items: center;
       justify-content: center;
       background: red;
       color: #fff;
       position: absolute;
       right: 0;
       top: 50%;
       transform: translateY(-50%);
       z-index: 1;
     }
}
</style>

